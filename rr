rm /root/fog-debian -rf
#    â–‘â–’â–“â–ˆ â˜ï¸ Project Fog 2.4.0 â˜ï¸ â–ˆâ–“â–’â–‘" 
#              by: blackestsaint

#########################################################
###      Input your desire port and information...
#########################################################

MyScriptName='blackestsaint'

#version [reference for online update]
ver='2.4.0'

#Server Name for openvpn config and banner
ServerName='Project-Fog'

# OpenSSH Ports
SSH_Port1='22'
SSH_Port2='299'

# Dropbear Ports
Dropbear_Port1='790'
Dropbear_Port2='2770'

# Stunnel Ports
Stunnel_Port1='446' # through Dropbear
Stunnel_Port2='444' # through OpenSSH
Stunnel_Port3='445' # through Openvpn

# OpenVPN Ports
OpenVPN_TCP_Port='1103'
OpenVPN_UDP_Port='3900'

# Privoxy Ports
Privoxy_Port1='9880'
Privoxy_Port2='3100'

# Squid Ports
Squid_Port1='3233'
Squid_Port2='7003'
Squid_Port3='9005'

# Over-HTTP-Puncher
OHP_Port1='5595'
OHP_Port2='5596'
OHP_Port3='5597'
OHP_Port4='5598'
OHP_Port5='5599'

# Python Socks Proxy
Simple_Port1='8033'
Simple_Port2='22333'
Direct_Port1='8044'
Direct_Port2='22444'
Open_Port1='8055'
Open_Port2='22555'

# WebServer Ports
Php_Socket='9000'
Fog_Openvpn_Monitoring='89'
Tcp_Monitor_Port='450'
Udp_Monitor_Port='451'
Nginx_Port='85' 

# Server local time
MyVPS_Time='Asia/Manila'

#########################################################
###        Project Fog AutoScript Code Begins...
#########################################################

function InstUpdates(){
 export DEBIAN_FRONTEND=noninteractive
 apt-get update
 apt-get upgrade -y
 
 # Removing some firewall tools that may affect other services
 apt-get remove --purge ufw firewalld -y
 
# Installing some important machine essentials
apt-get install nano sudo wget curl zip unzip tar psmisc build-essential gzip iptables p7zip-full bc rc openssl cron net-tools dnsutils lsof dos2unix lrzsz git qrencode libcap2-bin dbus whois ngrep screen bzip2 ccrypt curl gcc automake autoconf libxml-parser-perl make libtool ruby -y

 
# Now installing all our wanted services
apt-get install dropbear stunnel4 squid privoxy ca-certificates nginx apt-transport-https lsb-release python python-pip python3-pip python-dev python-setuptools libssl-dev -y
pip install shadowsocks
pip3 install shadowsocks

# Installing all required packages to install Webmin
apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl shared-mime-info jq fail2ban -y

 
# Installing a text colorizer and design
gem install lolcat
apt-get install figlet


###### Chokepoint for Debian and Ubuntu No. 1  vvvvvv
# Installing all Web Panel Requirements
sudo apt-get install lsb-release ca-certificates apt-transport-https software-properties-common -y
sudo add-apt-repository ppa:ondrej/php -y
sudo apt-get --allow-unauthenticated upgrade -y
sudo add-apt-repository ppa:ondrej/nginx -y
sudo apt-get --allow-unauthenticated upgrade -y
sudo add-apt-repository universe -y
sudo apt-get --allow-unauthenticated upgrade -y
sudo add-apt-repository ppa:maxmind/ppa -y
sudo apt-get --allow-unauthenticated upgrade -y
sudo apt-get upgrade --fix-missing -y
sudo apt-get install -y php8.0 -y
sudo apt-get install php7.0-fpm -y
sudo apt-get install php7.0-cli -y
sudo apt-get install libssh2-1 -y
sudo apt-get install php-ssh2 -y
sudo apt-get install libgeoip-dev -y
sudo apt-get install uwsgi -y
sudo apt-get install geoipupdate -y
sudo apt-get install uwsgi-plugin-python -y
sudo apt-get install --reinstall python-virtualenv -y
sudo apt-get install --reinstall geoip-database-extra -y

sudo update-alternatives --set php /usr/bin/php7.0

apt-get install php7.0-ssh2 php-ssh2-all-dev -y

###### Chokepoint for Debian and Ubuntu No.1  ^^^^^

 # Installing OpenVPN by pulling its repository inside sources.list file 
 rm -rf /etc/apt/sources.list.d/openvpn*
 echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/openvpn.list
 wget -qO - http://build.openvpn.net/debian/openvpn/stable/pubkey.gpg|apt-key add -
 apt-get update
 apt-get install openvpn -y

# Certbot for Domain Self Sign Certification 2.3.4x
sudo apt-get install certbot -y

# Trying to remove obsolette packages after installation
apt-get autoremove -y
apt autoremove --fix-missing -y -f
echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6

}

function InstSSH(){
 # Removing some duplicated sshd server configs
rm -f /etc/ssh/sshd_config

sleep 1

# Creating a SSH server config using cat eof tricks
cat <<'MySSHConfig' > /etc/ssh/sshd_config
# Project FOG OpenSSH Server config
# -blackestsaint
Port myPORT1
Port myPORT2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 300
ClientAliveCountMax 2
UseDNS no
Banner /etc/zorro-luffy
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server

MySSHConfig

sleep 2
 # Now we'll put our ssh ports inside of sshd_config
 sed -i "s|myPORT1|$SSH_Port1|g" /etc/ssh/sshd_config
 sed -i "s|myPORT2|$SSH_Port2|g" /etc/ssh/sshd_config

 
 # My workaround code to remove `BAD Password error` from passwd command, it will fix password-related error on their ssh accounts.
 sed -i '/password\s*requisite\s*pam_cracklib.s.*/d' /etc/pam.d/common-password
 sed -i 's/use_authtok //g' /etc/pam.d/common-password

 # Some command to identify null shells when you tunnel through SSH or using Stunnel, it will fix user/pass authentication error on HTTP Injector, KPN Tunnel, eProxy, SVI, HTTP Proxy Injector etc ssh/ssl tunneling apps.
 sed -i '/\/bin\/false/d' /etc/shells
 sed -i '/\/usr\/sbin\/nologin/d' /etc/shells
 echo '/bin/false' >> /etc/shells
 echo '/usr/sbin/nologin' >> /etc/shells

# Restarting openssh service
 systemctl restart ssh
  
 # Removing some duplicate config file
 rm -rf /etc/default/dropbear*
 
 # creating dropbear config using cat eof tricks
 cat <<'MyDropbear' > /etc/default/dropbear
# Project FOG Dropbear Config
NO_START=0
DROPBEAR_PORT=PORT01
DROPBEAR_EXTRA_ARGS="-p PORT02"
DROPBEAR_BANNER="/etc/zorro-luffy"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
MyDropbear

 # Now changing our desired dropbear ports
 sed -i "s|PORT01|$Dropbear_Port1|g" /etc/default/dropbear
 sed -i "s|PORT02|$Dropbear_Port2|g" /etc/default/dropbear
 
 # Restarting dropbear service
 systemctl restart dropbear
}

function InsStunnel(){
 StunnelDir=$(ls /etc/default | grep stunnel | head -n1)

 # Creating stunnel startup config using cat eof tricks
cat <<'MyStunnelD' > /etc/default/$StunnelDir
# Project FOG Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/zorro-luffy"
PPP_RESTART=0
# RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
MyStunnelD

 # Removing all stunnel folder contents
 rm -rf /etc/stunnel/*
 
 # Creating stunnel certifcate using openssl
 openssl req -new -x509 -days 9999 -nodes -subj "/C=PH/ST=NCR/L=Batangas/O=$MyScriptName/OU=$MyScriptName/CN=$MyScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem

 # Creating stunnel server config
 cat <<'MyStunnelC' > /etc/stunnel/stunnel.conf
# My Stunnel Config
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0

[dropbear]
accept = Stunnel_Port1
connect = 127.0.0.1:dropbear_port_c

[openssh]
accept = Stunnel_Port2
connect = 127.0.0.1:openssh_port_c

[openvpn]
accept = 445
connect = 127.0.0.1:1103


MyStunnelC

 # setting stunnel ports
 sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /etc/stunnel/stunnel.conf
 sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
 sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /etc/stunnel/stunnel.conf
 sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
 sed -i "s|Stunnel_Port3|$Stunnel_Port3|g" /etc/stunnel/stunnel.conf
 sed -i "s|OpenVPN_TCP_Port|$(netstat -tlnp | grep -i openvpn | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf


 # Restarting stunnel service
 systemctl restart $StunnelDir


}

function InsOpenVPN(){

 # Checking if openvpn folder is accidentally deleted or purged
 if [[ ! -e /etc/openvpn ]]; then
  mkdir -p /etc/openvpn
 fi

 # Removing all existing openvpn server files
 rm -rf /etc/openvpn/*

 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf' > /etc/openvpn/server_tcp.conf
# OpenVPN TCP
port OVPNTCP
proto tcp
dev tun
dev-type tun
sndbuf 100000
rcvbuf 100000
crl-verify crl.pem
ca ca.crt
cert server.crt
key server.key
tls-auth ta.key 0
dh dh.pem
topology subnet
server 10.9.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
comp-lzo
user nobody
group nogroup
persist-tun
status openvpn-status.log
verb 2
mute 3
verify-client-cert none
username-as-common-name
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
myOpenVPNconf

cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# OpenVPN UDP
port OVPNUDP
proto udp
dev tun
user nobody
group nogroup
persist-key
persist-tun
keepalive 10 120
topology subnet
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "dhcp-option DNS 1.0.0.1"
push "dhcp-option DNS 1.1.1.1"
push "redirect-gateway def1 bypass-dhcp" 
crl-verify crl.pem
ca ca.crt
cert server.crt
key server.key
tls-auth tls-auth.key 0
dh dh.pem
auth SHA256
cipher AES-128-CBC
tls-server
tls-version-min 1.2
tls-cipher TLS-DHE-RSA-WITH-AES-128-GCM-SHA256
status openvpn.log
verb 3
verify-client-cert none
username-as-common-name
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
myOpenVPNconf2

 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIGHTCCBAWgAwIBAgIJAKDU0gXi0xAmMA0GCSqGSIb3DQEBDQUAMIGZMQswCQYD
VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTERMA8GA1UEBwwIQmVya2VsZXkx
DjAMBgNVBAoMBWRyZmN4MRYwFAYDVQQLDA1jZXJ0aWZpY2F0aW9uMRIwEAYDVQQD
DAlkcmZjeC5jb20xJjAkBgkqhkiG9w0BCQEWF2NlcnRpZmljYXRpb25AZHJmY3gu
Y29tMB4XDTE3MDcxNzE1NTc1MFoXDTE4MDgyMTE1NTc1MFowgZkxCzAJBgNVBAYT
AlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhCZXJrZWxleTEOMAwG
A1UECgwFZHJmY3gxFjAUBgNVBAsMDWNlcnRpZmljYXRpb24xEjAQBgNVBAMMCWRy
ZmN4LmNvbTEmMCQGCSqGSIb3DQEJARYXY2VydGlmaWNhdGlvbkBkcmZjeC5jb20w
ggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCjDtv3UGlNXUgx3Pk5tHQP
iYF4drbDUESa0WGofzINaeax4lTasIzoQBU03AwbN37gAtE03Wa28pCwDKuYYGqw
Brnwap5Fxd+/sIOtBcl0jLry90WrdN2seWPlwG8vqXC32FFnLq7g5NT3H5e0MDQP
I1/oSzL38OFJ7YbxWc25pmYp3iiZz9+HptR9i0Y/jxicdo1R9eMQdGB3E039VyeL
3kLNqwWgnR+0qjG3SY1o2uZODRIwsJkjlZR3yoBgr3I7VWx8heJ1lJDLsboTudTM
mAmuzb07/svUQS5HeTxFbpY9fVjG51cSEox1sK+o3+JxJ65OAfwGke1QADTQmPHc
Ed3d5Mt9EA4UQTY0WbqSw0H3DynVZ0FFgelUJtNg5GNJngEkgOa1dw3T+hEt7fz9
sMIpVpRE5PbabmD9iKIEnTx1wJURpaFM2StEBEZbEQbdsZ/K3SNaH3GcfizSHHfF
gdGR+tP3tdBdj2YBBec7VTqcd1+HO36ew2l7iWfWxCeQWgpoNbMc6mBQw7yo8wCJ
qRWRRIs/v2N3k0nV/B4OaRPsk7bEhVyw4X3Kb8/noyc4BtNz0T0YywXca6BAW+4J
uOLv1zQHkevEw1kYg58JW9i8kRlSK83aolmWFB59knadpd+IryAzQJ/KJMtcC+wO
u3aO2mWllfUhM0DlcYgXwQIDAQABo2YwZDASBgNVHRMBAf8ECDAGAQH/AgEBMA4G
A1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUZGPyyqgM2J3+8AJWR07Q3CPVre4wHwYD
VR0jBBgwFoAUZGPyyqgM2J3+8AJWR07Q3CPVre4wDQYJKoZIhvcNAQENBQADggIB
AEpcbxH7tHo44pL3JkjG2m8eZvT41yavQZf00lNWpN9gGmFyiSvNjWIoqeqYJVUX
Mi5RT++73e4Lfkgrvodfq5/AkswQAOffIM4WWdD1rbFq6pjfomk7xuY9UNKq1t3A
QAgz1wVeZNc5QiAVAF0l2Jtyc9sEF5DswNErD8ZCMbC9f9gKpX4JlZFcHGccoybE
SIFvSZmo/CAJA7/57J3NlVPzkBJUlm4BcXQh+4ITtr9e8zDz5A4IOwlnWR9MNwBC
uipkGfkRBIMIqyASl7uu9RGy7rpi43YbNlNbHPPe8kv4TTC1wMSNR+EB8TLxAAz2
z7x+5phCFzj0TTqfO0CavIcL1e/pNx8Uc9R2C4lgqiCXnbV+2nj4Ya36dx/m8M1/
PlIg3315QKtjRtIKLieAHTbI0c8DpzwDvX8uELFDhvibekzae7wjL77JihAtrZvT
9BAR41rOeTOCB6CE0hksjL2noYrtaZ5KAPSI5Ex0yu6YWDMXxSgUYmeNNhF4+RDh
jHFRqxkjcfW6VwsvxY2nYiCo72IUozE9eHGMY/oxG5/Az2ahwfKdrMTHayhuPnyy
hJv1EJZ7lnTzy17dnB/P4c7R9uoJad6lM+qZDnLNlaK4fP1S7UE2l/dgnOdCxiar
MK8zrHXjH8Ny1Kpsuc7/xOK18vsP5/qL3uHjA+Crcrrg
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/client.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 9623 (0x2597)
    Signature Algorithm: sha512WithRSAEncryption
        Issuer: C=US, ST=California, O=drfcx, OU=vpn, CN=vpn.drfcx.com/emailAddress=vpn@drfcx.com
        Validity
            Not Before: Aug  9 08:33:35 2017 GMT
            Not After : Sep 13 08:33:35 2018 GMT
        Subject: C=US, ST=California, O=drfcx, OU=vpn, CN=vpn.drfcx.com/emailAddress=vpn@drfcx.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (4096 bit)
                Modulus:
                    00:c7:aa:5a:aa:a6:98:cb:8e:f3:d1:22:31:37:67:
                    1e:2c:d3:d8:00:e8:90:4c:f0:94:17:32:14:40:06:
                    8f:cc:46:69:fc:7f:9a:d2:c3:25:4b:10:9e:d8:89:
                    ab:5c:35:24:7f:e3:12:ca:a3:86:1f:dc:7c:06:79:
                    d7:cc:25:4b:a2:33:26:3c:fb:94:02:05:63:12:3a:
                    51:00:41:44:d3:09:09:a8:00:f6:67:b4:65:6e:c2:
                    bc:1c:ac:78:61:fb:eb:7e:5c:dd:37:6b:65:15:be:
                    97:00:fb:4b:86:ba:6c:9e:8c:9a:03:69:1c:45:eb:
                    fd:3d:b7:59:57:7b:f2:52:91:26:0c:87:b1:b5:36:
                    5d:02:ec:3c:b4:96:55:70:21:ec:b0:df:cf:68:9b:
                    f3:0f:7e:1a:bf:a9:2e:97:5d:94:5e:2d:78:b8:d9:
                    21:44:c1:09:81:2d:10:32:b5:8a:cf:b2:45:ab:6d:
                    a1:ac:0e:7d:72:93:f3:77:cb:e1:50:8b:d3:43:5d:
                    6e:f2:be:a0:89:83:b7:97:09:f7:4b:4f:a7:53:9f:
                    0d:9d:2f:20:ae:32:69:4f:8d:91:21:c9:39:0b:b7:
                    89:1d:16:71:75:56:58:a0:41:11:31:d9:f9:9d:f9:
                    7d:17:91:f0:ad:54:6e:d5:3b:1e:7d:5a:57:3d:87:
                    a7:79:d0:b5:3e:0e:05:aa:9d:54:ac:bf:a1:84:04:
                    7e:12:fd:f5:5b:f9:6c:3e:6a:c9:ce:3c:4f:35:09:
                    33:53:45:c5:b2:d8:70:0f:4c:d8:6e:8d:c3:df:18:
                    04:03:b1:1b:99:9c:d9:34:d8:0f:32:04:ea:ad:9c:
                    01:e8:e7:11:e4:24:fe:22:67:ed:a6:ef:e1:74:ce:
                    7b:c7:a2:cd:a1:76:bc:33:99:35:87:18:61:63:fb:
                    96:98:cb:8a:a8:39:85:12:17:db:b3:86:5a:61:f0:
                    dc:7c:25:a8:43:83:4d:76:76:a2:54:b6:0f:93:75:
                    19:00:35:41:b1:ff:07:de:05:e9:ed:e9:59:a3:32:
                    a6:ee:3b:d4:e3:70:de:1b:66:40:0d:b7:30:2f:b0:
                    81:ac:6e:81:0e:87:22:5a:35:8a:85:9b:03:db:ca:
                    90:af:cc:ac:6d:58:68:bb:33:3f:5b:c1:46:11:9e:
                    7f:53:c6:6a:be:6e:a5:c7:5d:71:54:d1:01:91:cb:
                    9d:47:13:2a:d8:4a:03:a6:2c:b7:f7:5f:fc:5b:08:
                    d9:78:ae:0d:73:42:a5:68:cb:5d:1e:94:36:02:60:
                    04:60:91:fc:75:2c:f1:35:ae:61:6f:2e:3b:47:cd:
                    ff:0c:2b:18:21:a1:ce:f2:f5:33:7a:b4:d7:0e:19:
                    88:66:3d
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Key Usage: critical
                Digital Signature, Key Agreement
            X509v3 Extended Key Usage: critical
                TLS Web Client Authentication
            X509v3 Subject Key Identifier: 
                D9:13:37:FE:DE:34:0A:96:38:92:9B:6E:E7:17:DB:CC:86:40:0C:4B
            X509v3 Authority Key Identifier: 
                keyid:72:BE:FA:99:A5:A8:A2:0C:BE:2C:0B:E9:B5:57:E4:1A:41:CA:F3:23

            TLS Feature: 
                status_request_v2
    Signature Algorithm: sha512WithRSAEncryption
         5f:9e:1c:6c:10:21:ef:dc:e1:f3:72:1b:31:9c:67:da:38:ea:
         29:44:db:f1:ac:27:54:5f:b6:3a:8e:02:f8:6f:fc:8b:f4:5e:
         ee:e3:e7:db:5b:81:91:52:f1:93:d6:2a:b7:5f:9c:9c:5e:01:
         72:0f:28:ad:86:ad:c2:3c:88:31:9b:6a:21:11:dd:b4:83:a0:
         5f:90:75:e7:79:49:f3:1a:68:c5:bc:9d:a2:57:02:1a:bd:11:
         6a:c8:c0:80:c5:04:2f:bf:72:b6:66:ad:ec:ee:fc:f5:9f:1c:
         ed:2a:73:ac:bd:fb:e8:24:db:6d:54:af:3a:0e:8e:ef:04:7e:
         46:9a:18:32:46:6b:7f:1c:83:d3:65:cc:96:c6:d6:4f:28:bb:
         a3:8c:fc:ec:62:74:11:95:99:59:15:71:d8:fa:85:f6:24:71:
         c1:03:6a:58:71:7f:44:fe:eb:d0:5e:ab:f7:5e:85:cd:f0:86:
         ae:a6:f8:a6:51:10:7a:f3:19:e9:05:50:91:a2:df:65:c4:10:
         7c:7f:23:c9:9e:76:d7:fc:fc:5a:3e:b2:66:f9:96:37:8b:d0:
         09:25:1b:3e:3e:37:2b:aa:2c:36:73:b6:33:e6:5e:70:4d:8a:
         84:4b:14:f2:bc:c9:a7:7a:0b:63:3e:b9:87:08:23:6a:4f:0f:
         59:30:2c:98:0b:28:bc:33:53:28:70:9c:3a:b8:f0:37:e6:59:
         81:82:54:b3:2b:94:e2:e3:f8:00:2d:42:49:3c:af:98:1e:de:
         a7:43:5f:6d:78:f9:9f:0b:46:6e:5e:98:ad:19:fa:26:98:27:
         32:3e:6d:10:be:57:48:6c:7c:76:b3:29:3a:47:fa:c4:b9:d9:
         71:34:03:71:f3:91:fa:c5:24:07:3c:52:1e:28:e0:12:dc:f2:
         77:36:c0:2c:17:21:fe:9b:d9:cf:6a:db:79:5f:24:84:14:4a:
         01:5b:75:3d:b2:6c:c1:6a:f0:1e:83:a4:77:a5:84:c8:c8:ed:
         50:11:c6:87:8a:61:46:b8:9c:f4:34:1b:28:92:47:9d:86:90:
         d6:09:67:68:0c:cb:60:aa:86:1e:6a:c0:ef:89:45:97:39:00:
         c4:63:d7:fe:37:fb:ea:d2:dc:a3:14:7a:55:1c:7d:f7:89:ea:
         cc:e5:bf:c5:78:c6:46:c2:2d:fa:11:17:b3:55:82:30:96:69:
         a9:8c:fa:15:0c:00:d6:02:4c:c6:41:49:0d:27:64:4c:40:1a:
         6e:29:81:b6:7b:5b:9d:28:fb:f7:f8:8b:df:c7:50:e0:65:46:
         6b:29:9a:3a:d6:ac:7c:93:59:ec:37:e4:38:f9:42:25:e7:51:
         29:73:ba:ec:24:b2:74:97
-----BEGIN CERTIFICATE-----
MIIF9TCCA92gAwIBAgICJZcwDQYJKoZIhvcNAQENBQAwdjELMAkGA1UEBhMCVVMx
EzARBgNVBAgMCkNhbGlmb3JuaWExDjAMBgNVBAoMBWRyZmN4MQwwCgYDVQQLDAN2
cG4xFjAUBgNVBAMMDXZwbi5kcmZjeC5jb20xHDAaBgkqhkiG9w0BCQEWDXZwbkBk
cmZjeC5jb20wHhcNMTcwODA5MDgzMzM1WhcNMTgwOTEzMDgzMzM1WjB2MQswCQYD
VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEOMAwGA1UECgwFZHJmY3gxDDAK
BgNVBAsMA3ZwbjEWMBQGA1UEAwwNdnBuLmRyZmN4LmNvbTEcMBoGCSqGSIb3DQEJ
ARYNdnBuQGRyZmN4LmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB
AMeqWqqmmMuO89EiMTdnHizT2ADokEzwlBcyFEAGj8xGafx/mtLDJUsQntiJq1w1
JH/jEsqjhh/cfAZ518wlS6IzJjz7lAIFYxI6UQBBRNMJCagA9me0ZW7CvByseGH7
635c3TdrZRW+lwD7S4a6bJ6MmgNpHEXr/T23WVd78lKRJgyHsbU2XQLsPLSWVXAh
7LDfz2ib8w9+Gr+pLpddlF4teLjZIUTBCYEtEDK1is+yRattoawOfXKT83fL4VCL
00NdbvK+oImDt5cJ90tPp1OfDZ0vIK4yaU+NkSHJOQu3iR0WcXVWWKBBETHZ+Z35
fReR8K1UbtU7Hn1aVz2Hp3nQtT4OBaqdVKy/oYQEfhL99Vv5bD5qyc48TzUJM1NF
xbLYcA9M2G6Nw98YBAOxG5mc2TTYDzIE6q2cAejnEeQk/iJn7abv4XTOe8eizaF2
vDOZNYcYYWP7lpjLiqg5hRIX27OGWmHw3HwlqEODTXZ2olS2D5N1GQA1QbH/B94F
6e3pWaMypu471ONw3htmQA23MC+wgaxugQ6HIlo1ioWbA9vKkK/MrG1YaLszP1vB
RhGef1PGar5upcddcVTRAZHLnUcTKthKA6Yst/df/FsI2XiuDXNCpWjLXR6UNgJg
BGCR/HUs8TWuYW8uO0fN/wwrGCGhzvL1M3q01w4ZiGY9AgMBAAGjgYwwgYkwDAYD
VR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCA4gwFgYDVR0lAQH/BAwwCgYIKwYBBQUH
AwIwHQYDVR0OBBYEFNkTN/7eNAqWOJKbbucX28yGQAxLMB8GA1UdIwQYMBaAFHK+
+pmlqKIMviwL6bVX5BpByvMjMBEGCCsGAQUFBwEYBAUwAwIBETANBgkqhkiG9w0B
AQ0FAAOCAgEAX54cbBAh79zh83IbMZxn2jjqKUTb8awnVF+2Oo4C+G/8i/Re7uPn
21uBkVLxk9Yqt1+cnF4Bcg8orYatwjyIMZtqIRHdtIOgX5B153lJ8xpoxbydolcC
Gr0RasjAgMUEL79ytmat7O789Z8c7SpzrL376CTbbVSvOg6O7wR+RpoYMkZrfxyD
02XMlsbWTyi7o4z87GJ0EZWZWRVx2PqF9iRxwQNqWHF/RP7r0F6r916FzfCGrqb4
plEQevMZ6QVQkaLfZcQQfH8jyZ521/z8Wj6yZvmWN4vQCSUbPj43K6osNnO2M+Ze
cE2KhEsU8rzJp3oLYz65hwgjak8PWTAsmAsovDNTKHCcOrjwN+ZZgYJUsyuU4uP4
AC1CSTyvmB7ep0NfbXj5nwtGbl6YrRn6JpgnMj5tEL5XSGx8drMpOkf6xLnZcTQD
cfOR+sUkBzxSHijgEtzydzbALBch/pvZz2rbeV8khBRKAVt1PbJswWrwHoOkd6WE
yMjtUBHGh4phRric9DQbKJJHnYaQ1glnaAzLYKqGHmrA74lFlzkAxGPX/jf76tLc
oxR6VRx994nqzOW/xXjGRsIt+hEXs1WCMJZpqYz6FQwA1gJMxkFJDSdkTEAabimB
tntbnSj79/iL38dQ4GVGaymaOtasfJNZ7DfkOPlCJedRKXO67CSydJc=
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/client.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDNmgX/xVjPSfts
W5tU2rFrUkidCR5Tp8oUAzH/dgrXp+l6saa0raQ1orVi7rB1Ao5rk+WW18FJBIJz
DH4R3JIlO38MMCtM3cDh+8gxPEw56xwaiyhp4N46AotQl3FO6goooF/uENI5vrsO
Kmnt+fCrb+mc6fqDZEUirHGJtnCrQjIiIyjPt7gsBPlWYCxFZonFG05VNefWhpK9
lfDrNlNMledvsIPmIE2c/GuFr1DkQY2ve/vyyK+44oSbJpkq7WIjdnhvzt4tbAig
Ht6UUBL0viDuaaWsrMY4LxPzgm+DYi72XFnYNRAAMag4OcI/CzDcmgXFZeosbSJn
B6dYKZBNAgMBAAECggEAW8Gha8RnHhumWXWInRX8mCjgvzSSlEMNrGDAr4G+1P/a
8ybVf0z/O/ChgsWDerTpWplmnSss16lrjmzE1rPZhURILuhQar2Ml04GyfJfEnoa
0L3KC3aPttPr2Mu9hbptTjREm7pmF99HG8tR+yLQhbIsUBsb8geN0yuigBMrtUHI
1wgP1C0gpbfPWExq7kTTclnHFjDRn2SuAXGRKNrCkMI+3r17TPooq0Tf/3wHxE6o
a3d1eMuVdX50pDJNV7vfkSm4FrJXWaXhj5s7lj5PLsqE9NXA9RWuL73awCjM9PL3
b7HWLi5GGqucvxya8W6S/YZcNFNmhxi/dH+xQuv3AQKBgQDmEOWc9oZrQuxep6qS
TkScfkntAo/F5SeD2fg2NX5hgQAkdFaGcIEqcp49bSb2N/AS8xO5Dowld7AcX6X0
YZYTSWBb4YhcFs2acZDlSJ0EILOabjeX26IAYPt0M83rccy6/+WNq8gydSzzlKOf
MsIEEdikppBe4CXGxfHX6zFNOwKBgQDkxyY9LT7Xq0NF9Hz+1+enVPySMsoyC8jQ
YEJCCnsQyL31G9+k3DnWGAss7/Rnjd9fVryPNpKuqBhFMsJPjVJXs1pfNoRI2Haz
LObxlJNcTED4ONHLD5VjM84j97EKQBQ5ZrKvUwnRJBI5ljNRa26rAW4/jnPWsI5x
XDDtpvjgFwKBgFDSWMeWd0xRG1Z5UlvJcSME3pWLk9RylzojpaXtjvNT7SfhUtAx
z76Iu3xazxgqOIV/rUsSiDtVW6HsHBHJAn7OBTLh/RRU0m/SO5PAuaBMmKvE0nTf
rH6zk0KUPF/c/44l/Y+SbGcFcQA1FHIF09C4MEJPXWJnHf5BZZ9zuUMnAoGAMi1T
v7s6u0a+3IsBF0v3bQYA13f4TP20r69NGPr/fvDoaOgSJzB+JuzjFpoSetvtEBYQ
CUEo7tHDcPnvEE+orb+SpKtqXCfN8QJ6LKYvo+C9pzOfH/BtDXMBVXYwCFWBmg1i
R33o+0v0C1lcLBFqFmub6Kiv03ip5UcZHCaxE0UCgYEAlHzk63DYXtgC6AK47auk
sqfz6c2/6OpvDL3ez9T/RqiLxpdBNjh1zQ9gNwtRC7ijS6DUkvdcXbeweXTT+gXQ
bskMRq1YeuijP9+eVoX4dye92nXLO7cRLUvJINS/VJTQFcfFMWlvc2P5i3FVsvxD
l2Zif9fCaYAfPcUAEazdLjw=
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF18'> /etc/openvpn/tls-auth.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
bdcfd0846a6e313b81166314b6b3837c
b4860c3d84ac2f17fcf26a7ca090974c
97ec8395c67b98090560e82120b16eb0
d3f237fb7d5033985db907a3e3fce5ab
ee5bad86b77a36166f80b594aa3b53db
87863f3250e931d37a1b66703d7691b7
88c4e0e648fa278da3c883247daa3c38
379a26c262ed37a6ee1ec7ba826e703b
e9f4a494f89b253499e0b64f20250157
cb182c932bdd916de5aef07ff6e5a4ee
b3eb7aec6a058785ff771d2c18432790
195eae67a96f383be5931c1356734a6b
f4c619cb97094fd337f971b340bad41b
bb774d630c2eb24fd0057785d505afee
6a2749f79febf7bdb1e5a6c62f250c55
2f2448e5be01abb287151073d53f3996
-----END OpenVPN Static key V1-----
EOF18
 cat <<'EOF107'> /etc/openvpn/server.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 9621 (0x2595)
    Signature Algorithm: sha512WithRSAEncryption
        Issuer: C=US, ST=California, O=drfcx, OU=vpn, CN=vpn.drfcx.com/emailAddress=vpn@drfcx.com
        Validity
            Not Before: Jul 18 01:01:34 2017 GMT
            Not After : Aug 22 01:01:34 2018 GMT
        Subject: C=US, ST=California, O=drfcx, OU=vpn, CN=vpn.drfcx.com/emailAddress=vpn@drfcx.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (4096 bit)
                Modulus:
                    00:c7:aa:5a:aa:a6:98:cb:8e:f3:d1:22:31:37:67:
                    1e:2c:d3:d8:00:e8:90:4c:f0:94:17:32:14:40:06:
                    8f:cc:46:69:fc:7f:9a:d2:c3:25:4b:10:9e:d8:89:
                    ab:5c:35:24:7f:e3:12:ca:a3:86:1f:dc:7c:06:79:
                    d7:cc:25:4b:a2:33:26:3c:fb:94:02:05:63:12:3a:
                    51:00:41:44:d3:09:09:a8:00:f6:67:b4:65:6e:c2:
                    bc:1c:ac:78:61:fb:eb:7e:5c:dd:37:6b:65:15:be:
                    97:00:fb:4b:86:ba:6c:9e:8c:9a:03:69:1c:45:eb:
                    fd:3d:b7:59:57:7b:f2:52:91:26:0c:87:b1:b5:36:
                    5d:02:ec:3c:b4:96:55:70:21:ec:b0:df:cf:68:9b:
                    f3:0f:7e:1a:bf:a9:2e:97:5d:94:5e:2d:78:b8:d9:
                    21:44:c1:09:81:2d:10:32:b5:8a:cf:b2:45:ab:6d:
                    a1:ac:0e:7d:72:93:f3:77:cb:e1:50:8b:d3:43:5d:
                    6e:f2:be:a0:89:83:b7:97:09:f7:4b:4f:a7:53:9f:
                    0d:9d:2f:20:ae:32:69:4f:8d:91:21:c9:39:0b:b7:
                    89:1d:16:71:75:56:58:a0:41:11:31:d9:f9:9d:f9:
                    7d:17:91:f0:ad:54:6e:d5:3b:1e:7d:5a:57:3d:87:
                    a7:79:d0:b5:3e:0e:05:aa:9d:54:ac:bf:a1:84:04:
                    7e:12:fd:f5:5b:f9:6c:3e:6a:c9:ce:3c:4f:35:09:
                    33:53:45:c5:b2:d8:70:0f:4c:d8:6e:8d:c3:df:18:
                    04:03:b1:1b:99:9c:d9:34:d8:0f:32:04:ea:ad:9c:
                    01:e8:e7:11:e4:24:fe:22:67:ed:a6:ef:e1:74:ce:
                    7b:c7:a2:cd:a1:76:bc:33:99:35:87:18:61:63:fb:
                    96:98:cb:8a:a8:39:85:12:17:db:b3:86:5a:61:f0:
                    dc:7c:25:a8:43:83:4d:76:76:a2:54:b6:0f:93:75:
                    19:00:35:41:b1:ff:07:de:05:e9:ed:e9:59:a3:32:
                    a6:ee:3b:d4:e3:70:de:1b:66:40:0d:b7:30:2f:b0:
                    81:ac:6e:81:0e:87:22:5a:35:8a:85:9b:03:db:ca:
                    90:af:cc:ac:6d:58:68:bb:33:3f:5b:c1:46:11:9e:
                    7f:53:c6:6a:be:6e:a5:c7:5d:71:54:d1:01:91:cb:
                    9d:47:13:2a:d8:4a:03:a6:2c:b7:f7:5f:fc:5b:08:
                    d9:78:ae:0d:73:42:a5:68:cb:5d:1e:94:36:02:60:
                    04:60:91:fc:75:2c:f1:35:ae:61:6f:2e:3b:47:cd:
                    ff:0c:2b:18:21:a1:ce:f2:f5:33:7a:b4:d7:0e:19:
                    88:66:3d
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment
            X509v3 Extended Key Usage: critical
                TLS Web Server Authentication
            X509v3 Subject Key Identifier: 
                D9:13:37:FE:DE:34:0A:96:38:92:9B:6E:E7:17:DB:CC:86:40:0C:4B
            X509v3 Authority Key Identifier: 
                keyid:72:BE:FA:99:A5:A8:A2:0C:BE:2C:0B:E9:B5:57:E4:1A:41:CA:F3:23

            TLS Feature: 
                status_request_v2
    Signature Algorithm: sha512WithRSAEncryption
         92:02:53:13:b6:b3:8e:04:d5:39:d8:64:02:cc:2a:24:a4:99:
         70:d0:08:dd:57:9b:c0:f1:b5:4f:b7:57:98:34:72:7e:bc:38:
         9a:2c:d2:d6:60:03:b6:a1:4a:1d:04:7c:ac:a2:f7:b8:5e:78:
         b8:05:49:2f:1b:94:01:7b:75:fd:21:51:bc:1e:69:21:2c:9e:
         40:ad:c8:ba:22:7a:27:59:1e:d8:93:e4:d2:de:d4:b7:23:d1:
         1e:47:ea:7e:d6:86:bf:d8:65:70:be:35:51:95:ce:29:42:f6:
         08:96:30:e9:81:e3:24:cd:b4:bd:b0:b0:35:1e:5f:e3:52:d8:
         ad:1e:ca:46:14:c5:8c:fc:80:3a:2d:e3:f8:33:65:67:5f:79:
         67:57:9d:2c:10:65:ee:67:df:78:27:1e:e4:7f:eb:bb:c8:0b:
         d4:82:b3:39:d8:6b:52:51:ff:af:65:c1:c3:0e:dd:a2:fd:23:
         6c:18:59:29:c9:8c:a3:d9:3b:55:53:3b:7b:c1:3a:1f:c6:5a:
         0d:b3:71:ad:41:d6:76:61:86:7c:ca:5f:0e:f2:31:a6:a7:b3:
         3d:6e:d3:ae:ae:71:41:0d:9a:e9:f6:ab:1c:5e:a0:37:f5:98:
         92:b9:3c:0a:6a:aa:70:55:57:dd:cb:78:36:39:22:53:80:24:
         a6:41:2a:8d:eb:5f:1e:0e:4f:61:56:44:89:80:35:d7:a9:0d:
         02:75:80:72:40:04:2a:63:4c:d3:ee:da:59:e6:d6:ed:05:17:
         5c:f2:66:12:1f:b9:29:83:90:aa:b8:06:8a:9c:de:60:c5:2c:
         71:dd:6c:be:75:02:13:3d:9f:28:3d:44:0f:01:0a:63:96:9f:
         f8:a3:79:d8:ec:be:ea:8a:6f:9f:31:e7:06:39:6a:61:54:c7:
         ff:26:10:fa:c5:84:24:bc:18:ed:62:6d:8d:2f:b2:7d:fb:c0:
         d0:2e:b5:f1:7a:72:2c:ae:31:06:95:7b:1f:3e:c2:5b:af:3a:
         53:3d:67:1c:f7:0b:f7:09:4c:59:8b:be:5a:2f:aa:8b:88:f0:
         d9:2b:ec:34:da:9e:c8:93:44:35:40:4b:f1:f4:b5:96:b0:14:
         dd:69:84:31:9e:7b:67:e6:90:63:20:cb:bd:7b:3b:14:8a:be:
         39:7a:79:65:9f:12:6a:e2:b1:f8:91:12:a6:83:e5:70:ec:f6:
         62:30:df:01:8e:63:ee:79:23:4a:fc:c8:02:b4:1f:47:84:d5:
         12:26:46:76:e1:01:9e:01:5f:a8:cf:cb:5e:fe:60:d8:a9:6a:
         5a:ce:fe:34:3d:bb:c0:b7:7d:54:a4:4b:6d:53:ee:66:44:68:
         c6:90:1f:d6:9a:a0:7e:a6
-----BEGIN CERTIFICATE-----
MIIF9TCCA92gAwIBAgICJZUwDQYJKoZIhvcNAQENBQAwdjELMAkGA1UEBhMCVVMx
EzARBgNVBAgMCkNhbGlmb3JuaWExDjAMBgNVBAoMBWRyZmN4MQwwCgYDVQQLDAN2
cG4xFjAUBgNVBAMMDXZwbi5kcmZjeC5jb20xHDAaBgkqhkiG9w0BCQEWDXZwbkBk
cmZjeC5jb20wHhcNMTcwNzE4MDEwMTM0WhcNMTgwODIyMDEwMTM0WjB2MQswCQYD
VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEOMAwGA1UECgwFZHJmY3gxDDAK
BgNVBAsMA3ZwbjEWMBQGA1UEAwwNdnBuLmRyZmN4LmNvbTEcMBoGCSqGSIb3DQEJ
ARYNdnBuQGRyZmN4LmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB
AMeqWqqmmMuO89EiMTdnHizT2ADokEzwlBcyFEAGj8xGafx/mtLDJUsQntiJq1w1
JH/jEsqjhh/cfAZ518wlS6IzJjz7lAIFYxI6UQBBRNMJCagA9me0ZW7CvByseGH7
635c3TdrZRW+lwD7S4a6bJ6MmgNpHEXr/T23WVd78lKRJgyHsbU2XQLsPLSWVXAh
7LDfz2ib8w9+Gr+pLpddlF4teLjZIUTBCYEtEDK1is+yRattoawOfXKT83fL4VCL
00NdbvK+oImDt5cJ90tPp1OfDZ0vIK4yaU+NkSHJOQu3iR0WcXVWWKBBETHZ+Z35
fReR8K1UbtU7Hn1aVz2Hp3nQtT4OBaqdVKy/oYQEfhL99Vv5bD5qyc48TzUJM1NF
xbLYcA9M2G6Nw98YBAOxG5mc2TTYDzIE6q2cAejnEeQk/iJn7abv4XTOe8eizaF2
vDOZNYcYYWP7lpjLiqg5hRIX27OGWmHw3HwlqEODTXZ2olS2D5N1GQA1QbH/B94F
6e3pWaMypu471ONw3htmQA23MC+wgaxugQ6HIlo1ioWbA9vKkK/MrG1YaLszP1vB
RhGef1PGar5upcddcVTRAZHLnUcTKthKA6Yst/df/FsI2XiuDXNCpWjLXR6UNgJg
BGCR/HUs8TWuYW8uO0fN/wwrGCGhzvL1M3q01w4ZiGY9AgMBAAGjgYwwgYkwDAYD
VR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAwwCgYIKwYBBQUH
AwEwHQYDVR0OBBYEFNkTN/7eNAqWOJKbbucX28yGQAxLMB8GA1UdIwQYMBaAFHK+
+pmlqKIMviwL6bVX5BpByvMjMBEGCCsGAQUFBwEYBAUwAwIBETANBgkqhkiG9w0B
AQ0FAAOCAgEAkgJTE7azjgTVOdhkAswqJKSZcNAI3VebwPG1T7dXmDRyfrw4mizS
1mADtqFKHQR8rKL3uF54uAVJLxuUAXt1/SFRvB5pISyeQK3IuiJ6J1ke2JPk0t7U
tyPRHkfqftaGv9hlcL41UZXOKUL2CJYw6YHjJM20vbCwNR5f41LYrR7KRhTFjPyA
Oi3j+DNlZ195Z1edLBBl7mffeCce5H/ru8gL1IKzOdhrUlH/r2XBww7dov0jbBhZ
KcmMo9k7VVM7e8E6H8ZaDbNxrUHWdmGGfMpfDvIxpqezPW7Trq5xQQ2a6farHF6g
N/WYkrk8CmqqcFVX3ct4NjkiU4AkpkEqjetfHg5PYVZEiYA116kNAnWAckAEKmNM
0+7aWebW7QUXXPJmEh+5KYOQqrgGipzeYMUscd1svnUCEz2fKD1EDwEKY5af+KN5
2Oy+6opvnzHnBjlqYVTH/yYQ+sWEJLwY7WJtjS+yffvA0C618XpyLK4xBpV7Hz7C
W686Uz1nHPcL9wlMWYu+Wi+qi4jw2SvsNNqeyJNENUBL8fS1lrAU3WmEMZ57Z+aQ
YyDLvXs7FIq+OXp5ZZ8SauKx+JESpoPlcOz2YjDfAY5j7nkjSvzIArQfR4TVEiZG
duEBngFfqM/LXv5g2KlqWs7+ND27wLd9VKRLbVPuZkRoxpAf1pqgfqY=
-----END CERTIFICATE-----
EOF107
 cat <<'EOF113'> /etc/openvpn/server.key
-----BEGIN RSA PRIVATE KEY-----
MIIJJwIBAAKCAgEAx6paqqaYy47z0SIxN2ceLNPYAOiQTPCUFzIUQAaPzEZp/H+a
0sMlSxCe2ImrXDUkf+MSyqOGH9x8BnnXzCVLojMmPPuUAgVjEjpRAEFE0wkJqAD2
Z7RlbsK8HKx4YfvrflzdN2tlFb6XAPtLhrpsnoyaA2kcRev9PbdZV3vyUpEmDIex
tTZdAuw8tJZVcCHssN/PaJvzD34av6kul12UXi14uNkhRMEJgS0QMrWKz7JFq22h
rA59cpPzd8vhUIvTQ11u8r6giYO3lwn3S0+nU58NnS8grjJpT42RIck5C7eJHRZx
dVZYoEERMdn5nfl9F5HwrVRu1TsefVpXPYenedC1Pg4Fqp1UrL+hhAR+Ev31W/ls
PmrJzjxPNQkzU0XFsthwD0zYbo3D3xgEA7EbmZzZNNgPMgTqrZwB6OcR5CT+Imft
pu/hdM57x6LNoXa8M5k1hxhhY/uWmMuKqDmFEhfbs4ZaYfDcfCWoQ4NNdnaiVLYP
k3UZADVBsf8H3gXp7elZozKm7jvU43DeG2ZADbcwL7CBrG6BDociWjWKhZsD28qQ
r8ysbVhouzM/W8FGEZ5/U8Zqvm6lx11xVNEBkcudRxMq2EoDpiy391/8WwjZeK4N
c0KlaMtdHpQ2AmAEYJH8dSzxNa5hby47R83/DCsYIaHO8vUzerTXDhmIZj0CAwEA
AQKCAgBInOGgUjobPX/aPM8dUPkeYGSb3/gqowuYa/QFXN2K8si0tUt+/s1fQUoj
gd26CPGfONuqqlGq4KqSSFl8usuIz4VGhE/NdFwVUvQGXbZD8XN7j+4MxQRmhZeX
7flR2SZJrEgfUYVPpSKRjtJmywGZn5SbTOylWS+d9EIfmMoF0Re/UtIEDyNAXt2s
50dnIk9L+/kYGC8LIVdlAIgbMEM3BN50izKYKIPmYJcVegRjiHfh4lr7kcF5m+jd
Vl44xsEsLJye10jW+foYid1PnEZEGQIAehUuhNLbxaZUXTPL2RGabIESpTZSAZfZ
Q2aOVx9xJPgccSpljbyG5gX4MI9tDhZRrOOZqbRIzxHsLvzClYNWNid3B9I1N5WJ
38z+BMnVI8i6UC1ygP03nZ8qY/H297wxmXrp8iYFFM4BzAyBYd0ZxtNPuczt995I
OpKv8D2Pz4pcbw0QU0mCE8dnEQJUP3e6yenwFsKoU16ZXRVq7Jdb3iie/iGoQNMU
C2C7ics8xX3PshEKOnkgcXitOcU3pv/TLjiJ3GPBptsrgYvV3ICM2z8/H3cGy1ji
CgVggz+oxJqpbzoa7qpCuImY4kiBGwDwhWqJM7pcSG96mKrZ7+hQx8tFuLXoqMv6
kZib93zEvkvZTCPWeLHd+3PhJmVdwDjjfh77PkL7zyXKAxGmmQKCAQEA/4iEsCXC
azpNT4UPnrk3OzEZ3nwPA5XeUsOK/jCOHGdAaGbYF3aOhrM96R/xJ7+CS+uPQNhK
a7nRvy1Yb5RiPc7mXpyvDdeYsT0WiT2wEhGiYHpVHWAzEWn1EPn18Nz1xVe07Pt2
fh0zNpE/c/whScPVBuvj14ZY+KEP54yPry1aMUm1o3LBhbmONEpp6E24so0zuf58
plKkRl9fkfYYLhdvajGDiM7IyxB2QMUi7+9II9W03/mKNGCleEXnQHt+ZeQtksOQ
D5GRmg4YauOuW6yDxomoUHpHrAgr5cHnTuKd1Bk55WZEBZ/uoqp9lNDlmM7HWZWr
U84cf0Bp39rAgwKCAQEAyAe2mqIefOzTXH2Em0qyBL0LEvNPDb0nCYCmWu+LuKeo
fYGvaV8CvNkSJcYw4OqModEVQdb+fJlKa9Lh3HO3wReFuFxZCKJtR8xBr3mIJLLQ
1tYXQ2dzokE0X8nJSVnAqUKDz/LSm44JY+CNI6yWeu5u9HTPkpEwOMoVfNizFVZc
KK+Gno4zwz04uUR15XaUuyyS7/amrKVGKCJw2KWvDJKdRX8tT2Dk/m3YAK7pTnKm
HflndN9MEHQTtWPz/+n+pq8SmiCfGSzCEuRE6LUObrmXZHP8vcGuccBHSCTdFy6P
u3QspoCKSFHlc/rcdWN3mwtWYg+4GK6/3V3Us2YCPwKCAQATwa9YmyLD/Zb6nfQO
No3BotM4M2lJwq2Uwo+dhY2HPqhpKgJtFfqBCZywyIpxo0nkqsrBnbdrSsuft1bO
Ea/izXtcN0sFi/S/R1TVuZJCY2Cliu/HvKdWIlYTQPA19i9+WYCgjfSkXYeXIXXB
du3v8RcoWNad1EJOvs0m/uQhDCWcB/HmODokJ6uJ+XLkxhWQoIAuUjG6/kq7MiaG
d3t5HNC9aiScUDiQEq7B5TwFRv/R3XUFmBqKYCqK+QSfJK0qHZE0drBNs9iJC6vx
n7bcWaM6l2wPBNVDxMH4GpzSqYzAWE70oIqD0NC3fO0Gs3v864fYMk0zxozHfehx
qU0XAoIBADMRpRE9qsMCQ8QtV5m+LE0BZr5j2B8N19WZPt+goO93/pBsd7hTRYOp
d/Sk8P27ZEQ7+U1h8n8lM9brdDawZI2rz7wN9704muXlxC9ku9mCvcbbyfyvgNpA
A3shLX7Ip2OPU8/XkuWcEdGqFt6wxYqFLVbEK+qjnsgg7/N779zWu5i3l4sLizOh
gcXrMJ5w8/AFpU4Wjt8tIwhEIsNtKY/wLq77lTna5xv+N1OVVINuyfKFJmC0Udsx
h4acCkOgHh+4OuuWwIfQ4YupM96luxWR1JEU+8YGmN751DkbEEdG3/Nf6bZowuVL
42UE+xwNVRAEiP1oPfwvQVTnC9LxjEkCggEAd/f2TV6QKGZ+Cr0kwIanel3e7/wQ
XhjhikPoib+uwXcLhCWHiCaRXNFNd9cjiGrMAuvu/G9Oo+g52/gZgfFddoN0Ds2P
os7wNrFylbePSAHBDI5vBlq0XrpTSmb902bn24O9skkdRYWmQLOOECIlQpLrlqbM
WpOWxMQEcO0NyRG1kTnGB0vijVGkmnkfxflMO5e/ivfVfyWd00X13p7+QH+efigM
lJFTGQijcva9X4/oxwv9cjzJsSOtRYuPwSqKKhmnCc1wDYrgexYYITbIfFVriou8
g0xP9rp/BVK8X+RNR0rAicCesUk2eGaI03108Mvzy1hUwHxDSvfL9mpZBQ==
-----END RSA PRIVATE KEY-----
EOF113
 cat <<'EOF13'> /etc/openvpn/dh.pem
-----BEGIN DH PARAMETERS-----
MIICCAKCAgEAwhvQ8aHfvN8h+V9o4DulbJGE2CJRpDUnFxZnOODP+dwRYaiqqxns
C2FxvXc87jmHl8N1uV1OFoDH7xuoeavwtYjyp4lIPJd2b8ZHBfVQXpEMgWBK6enx
b0RTDaRVpoUPaSuTDfRJR+YE1WfHIm6dk3x/wF8AmhG9JZNBbKTQkaXH8wWXWwdM
XmSwb4vD/b0BdGdlmmGB5kyFfiv0y29AA73aStJUM8PX+1WHMHJE7ns87EyWhtQx
28epsWsGudfpMxXgt+5+m+pUcNkGXldYRefY/fxxbGpNUh26GPfpCrt9n0K/bOlD
7LTsKhSqd/v9nD0YRte+3x+MxEbeqF4PwwQhn/ZiC0zLgbls9aEcHBidDU/B1P/Y
61MsyTgfnKDlO0OeyI2+GLuxIXdIVDTrzkWKZ5f9F4C88X7wxm17c++JlsJ0hhc7
PZns5mcgNsOOzQ4RTzAR2vZ61gNj64N2b1BGyZxTClzB0PzbMDqblObf71f/0AYf
zUS7S9ZRPlAMJ4Hdmwwponi+j5iJ5s+BchSNwK+7HLfjysCxrtlxM9KUpwLtMFah
806QY6ck0+f5GeR194m+Gp0k0L+1wvxWPHH7Jwr9R9TN1R8DXdQH2VT8wwKSE2sM
5e30/2I+Q/MJXGvtdUMC6eWtDgQvUHl57IJVTzQAwzpY+13h5hIjEnsCAQI=
-----END DH PARAMETERS-----
EOF13
 cat <<'EOF103'> /etc/openvpn/crl.pem
-----BEGIN X509 CRL-----
MIIBvDCBpQIBATANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA52cG4uZjVsYWJz
LmRldhcNMjEwMTE0MDI1MTIzWhcNMzEwMTEyMDI1MTIzWqBYMFYwVAYDVR0jBE0w
S4AU/Ga3V1iPk7I6YR5DeNQuQ+9e5DWhHaQbMBkxFzAVBgNVBAMMDnZwbi5mNWxh
YnMuZGV2ghRRnHaHIWPU0/8eVLJ7jd8THvVqrDANBgkqhkiG9w0BAQsFAAOCAQEA
qv7+B4WNPqRI4WAiTnCtE/vQlQeKnn39NvDEbjfpJjNZAadQxaTeYtO58TOCu5R4
qwF42g0E2mUQvwUEmUeVulnDjEz5e6KOkgllWsrZGwlUObuKNNKrCHqvXxbH/rHk
76/4Jfu7IvqTk4a9c+MV5r5eSA7plRzdJhqgkBWCmD/46UlP2imkgNGg4FeAamuc
kiLEVXPwjRK30L3uUcWXzvXmXtLlvaadPHKPS5YA41WKS0xZ9iELIz0eUHXl8pgd
jrZFH4tMHWZ+mBTRA/76xsbBGWtkxND932g1vAc281EHv9+4iyW1SdvUTJNzZObh
6GJJ6ESQE6h3vJJpVeoFCg==
-----END X509 CRL-----
EOF103
 cat <<'EOF122'> /etc/openvpn/ta.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
71a63e456421cc6e8bcb6cea20250b41
be612bb3377b90e01038bf05addb223e
967f17b287186a735b2e6881bca603b0
7011b7786c3d67221cbc30fd6d625cca
13971601f368207319165a9662bd18f4
7a4da56ed7ea7599ae0d3e8e562142a9
0d3a51c16a398a91fe60b242805be2b0
d5b5b4d9b26928326a2ac37b6a231cda
db3914cca2652f820be2a2c4336dbc5a
d3f436a335fb9e078627b835e6508b6b
13a2152a727bb66d0ae065624baf4a47
661c1015d909e971c4f9e508f3f61e8e
fbb6ed6959c2abe360838fccce55d17f
b91a19214a8aab872145658cc3605b61
309771903dc263b6e89a74fb857bec29
639113394be9360a57867d7ca8a2584f
-----END OpenVPN Static key V1-----
EOF122



 # Creating a New update message in server.conf
 cat <<'NUovpn' > /etc/openvpn/server.conf
 # New Update are now released, OpenVPN Server
 # are now running both TCP and UDP Protocol. (Both are only running on IPv4)
 # But our native server.conf are now removed and divided
 # Into two different configs base on their Protocols:
 #  * OpenVPN TCP (located at /etc/openvpn/server_tcp.conf
 #  * OpenVPN UDP (located at /etc/openvpn/server_udp.conf
 # 
 # Also other logging files like
 # status logs and server logs
 # are moved into new different file names:
 #  * OpenVPN TCP Server logs (/etc/openvpn/tcp.log)
 #  * OpenVPN UDP Server logs (/etc/openvpn/udp.log)
 #  * OpenVPN TCP Status logs (/etc/openvpn/tcp_stats.log)
 #  * OpenVPN UDP Status logs (/etc/openvpn/udp_stats.log)
 #
 # Server ports are configured base on env vars
 # executed/raised from this script (OpenVPN_TCP_Port/OpenVPN_UDP_Port)
 #
NUovpn

 # setting openvpn server port
 sed -i "s|OVPNTCP|$OpenVPN_TCP_Port|g" /etc/openvpn/server_tcp.conf
 sed -i "s|OVPNUDP|$OpenVPN_UDP_Port|g" /etc/openvpn/server_udp.conf
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/openvpn/server_tcp.conf
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/openvpn/server_udp.conf
 sed -i "s|Tcp_Monitor_Port|$Tcp_Monitor_Port|g" /etc/openvpn/server_tcp.conf
 sed -i "s|Udp_Monitor_Port|$Udp_Monitor_Port|g" /etc/openvpn/server_udp.conf

 # Getting some OpenVPN plugins for unix authentication
 cd
 wget https://github.com/korn-sudo/Project-Fog/raw/main/files/plugins/plugin.tgz
 tar -xzvf /root/plugin.tgz -C /etc/openvpn/
 rm -f plugin.tgz
 
 # Some workaround for OpenVZ machines for "Startup error" openvpn service
 if [[ "$(hostnamectl | grep -i Virtualization | awk '{print $2}' | head -n1)" == 'openvz' ]]; then
 sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn*
 systemctl daemon-reload
fi

 # Allow IPv4 Forwarding
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.conf
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.d/*.conf
 echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/20-openvpn.conf
 sysctl --system &> /dev/null

 # Iptables Rule for OpenVPN server
 cat <<'EOFipt' > /etc/openvpn/openvpn.bash
#!/bin/bash
PUBLIC_INET="$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)"
IPCIDR='10.200.0.0/16'
IPCIDR2='10.201.0.0/16'
iptables -I FORWARD -s $IPCIDR -j ACCEPT
iptables -I FORWARD -s $IPCIDR2 -j ACCEPT
iptables -t nat -A POSTROUTING -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR2 -o $PUBLIC_INET -j MASQUERADE
EOFipt
 chmod +x /etc/openvpn/openvpn.bash
 bash /etc/openvpn/openvpn.bash

 # Enabling IPv4 Forwarding
 echo 1 > /proc/sys/net/ipv4/ip_forward
 
 # Starting OpenVPN server
 systemctl start openvpn@server_tcp
 systemctl enable openvpn@server_tcp
 systemctl start openvpn@server_udp
 systemctl enable openvpn@server_udp

}
function InsProxy(){

 #!/bin/bash
clear
DISTRO=`awk '/^ID=/' /etc/*-release | awk -F'=' '{ print tolower($2) }'`
SERVER_IP=`ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p'`

# Welcome Message
echo 'Welcome to WhyTzy96 Script'
echo 'Script Version: 0.1'
echo 'Updated on: 07/08/2021'

# Verify Distro
if ! [[ $DISTRO == "ubuntu" || $DISTRO == "debian" ]]; then
	echo 'This script works only on Debian/Ubuntu OS'
	exit 1
fi

# Check if root
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi


if test -f "/root/.tcat_installed"; then
	echo 'TunnelCat VPN Software already installed!'
	exit 1
fi

#PORT SERVER
read -e -p 'Input your Server IP: ' -i $SERVER_IP SERVER_IP
read -e -p 'Input OpenVPN TCP Port: ' -i '1103' OPENVPN_PORT
read -e -p 'Input Privoxy Port: ' -i '8081' PRIVOXY_PORT
read -e -p 'Input ohpserver Port: ' -i '7752' OHP_PORT
read -e -p 'Input stunnel Port: ' -i '587' STUNNEL_PORT
read -e -p 'Input DNS Tunnel Domain: ' -i 'dns.tunnel.example.com' DNS_TUNNEL_DOMAIN

# Check input
echo 'Checking Input...'
if ! [[ $SERVER_IP =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
	echo 'Server IP is invalid'
	exit 1
fi

if ! [[ $OPENVPN_PORT =~ ^[0-9]+$ || $OHP_PORT =~ ^[0-9]+$ || $PRIVOXY_PORT =~ ^[0-9]+$ || $STUNNEL_PORT =~ ^[0-9]+$ ]]; then
	echo 'Port is invalid'
	exit 1
fi

echo 'Proceeding with the installation of dependencies'

# Install Dependencies
echo 'Installing Dependencies'
DEBIAN_FRONTEND=noninteractive apt install -y resolvconf privoxy stunnel unzip iproute2 dns2tcp
echo 'Dependencies Installed!' 

# Install TunnelCat VPN Software
echo 'Installing ohpserver'
wget https://github.com/lfasmpao/open-http-puncher/releases/download/0.1/ohpserver-linux32.zip
unzip ohpserver-linux32.zip
rm ohpserver-linux32.zip
mv ohpserver /usr/local/bin/
chmod +x /usr/local/bin/ohpserver

# Setup Privoxy
echo 'Setting up Privoxy'
mkdir /etc/privoxy/
cat <<EOF > /etc/privoxy/config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
actionsfile match-all.action
actionsfile default.action
actionsfile user.action
filterfile default.filter
filterfile user.filter
logfile logfile
listen-address  :$PRIVOXY_PORT
toggle 1
enable-remote-toggle  0
enable-remote-http-toggle  0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 0
forwarded-connect-retries  0
accept-intercepted-requests 0
allow-cgi-request-crunching 0
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
EOF

cat <<EOF1 > /etc/privoxy/user.action
{ +block }
/
{ -block }
*.tcat.me
127.0.0.1
$SERVER_IP
EOF1

# Setup ohpserver
echo 'Setup ohpserver'
cat <<EOF > /etc/systemd/system/ohpserver.service
[Unit]
Description=Daemonize OpenHTTP Puncher Server
Wants=network.target
After=network.target
[Service]
ExecStart=/usr/local/bin/ohpserver -port $OHP_PORT -proxy 127.0.0.1:$PRIVOXY_PORT -tunnel $SERVER_IP:$OPENVPN_PORT
Restart=always
RestartSec=3
[Install]
WantedBy=multi-user.target
EOF

echo 'Setup dns2tcp'
cat <<EOF > /etc/dns2tcpd.conf
listen = 0.0.0.0
port = 53
user = nobody
chroot = /tmp
pid_file = /var/run/dns2tcp.pid
domain = $DNS_TUNNEL_DOMAIN
resources = ovpn:$SERVER_IP:$OPENVPN_PORT
EOF

# Start Services
echo 'Running Services'
echo "nameserver 8.8.8.8" > /etc/resolvconf/resolv.conf.d/head
systemctl daemon-reload
systemctl restart resolvconf
systemctl restart stunnel4
systemctl restart privoxy
systemctl start ohpserver
systemctl stop systemd-resolved
systemctl start dns2tcp

# Enable on boot
echo 'Start services on boot'
systemctl enable stunnel4
systemctl enable privoxy
systemctl enable dns2tcp
systemctl enable ohpserver


 # Removing Duplicate Squid config
 rm -rf /etc/squid/squid.con*
 
 # Creating Squid server config using cat eof tricks
 cat <<'mySquid' > /etc/squid/squid.conf
# My Squid Proxy Server Config
acl VPN dst IP-ADDRESS/32
http_access allow VPN
http_access deny all 
http_port 0.0.0.0:Squid_Port1
http_port 0.0.0.0:Squid_Port2
http_port 0.0.0.0:Squid_Port3
### Allow Headers
request_header_access Allow allow all 
request_header_access Authorization allow all 
request_header_access WWW-Authenticate allow all 
request_header_access Proxy-Authorization allow all 
request_header_access Proxy-Authenticate allow all 
request_header_access Cache-Control allow all 
request_header_access Content-Encoding allow all 
request_header_access Content-Length allow all 
request_header_access Content-Type allow all 
request_header_access Date allow all 
request_header_access Expires allow all 
request_header_access Host allow all 
request_header_access If-Modified-Since allow all 
request_header_access Last-Modified allow all 
request_header_access Location allow all 
request_header_access Pragma allow all 
request_header_access Accept allow all 
request_header_access Accept-Charset allow all 
request_header_access Accept-Encoding allow all 
request_header_access Accept-Language allow all 
request_header_access Content-Language allow all 
request_header_access Mime-Version allow all 
request_header_access Retry-After allow all 
request_header_access Title allow all 
request_header_access Connection allow all 
request_header_access Proxy-Connection allow all 
request_header_access User-Agent allow all 
request_header_access Cookie allow all 
request_header_access All deny all
### HTTP Anonymizer Paranoid
reply_header_access Allow allow all 
reply_header_access Authorization allow all 
reply_header_access WWW-Authenticate allow all 
reply_header_access Proxy-Authorization allow all 
reply_header_access Proxy-Authenticate allow all 
reply_header_access Cache-Control allow all 
reply_header_access Content-Encoding allow all 
reply_header_access Content-Length allow all 
reply_header_access Content-Type allow all 
reply_header_access Date allow all 
reply_header_access Expires allow all 
reply_header_access Host allow all 
reply_header_access If-Modified-Since allow all 
reply_header_access Last-Modified allow all 
reply_header_access Location allow all 
reply_header_access Pragma allow all 
reply_header_access Accept allow all 
reply_header_access Accept-Charset allow all 
reply_header_access Accept-Encoding allow all 
reply_header_access Accept-Language allow all 
reply_header_access Content-Language allow all 
reply_header_access Mime-Version allow all 
reply_header_access Retry-After allow all 
reply_header_access Title allow all 
reply_header_access Connection allow all 
reply_header_access Proxy-Connection allow all 
reply_header_access User-Agent allow all 
reply_header_access Cookie allow all 
reply_header_access All deny all
#Korn
cache_mem 200 MB
maximum_object_size_in_memory 32 KB
maximum_object_size 1024 MB
minimum_object_size 0 KB
cache_swap_low 90
cache_swap_high 95
cache_dir ufs /var/spool/squid 100 16 256
access_log /var/log/squid/access.log squid
### CoreDump
coredump_dir /var/spool/squid
dns_nameservers 1.1.1.1 1.0.0.1
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname blackestsaint
mySquid

 # Setting machine's IP Address inside of our Squid config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/squid/squid.conf
 
 # Setting squid ports
 sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port3|$Squid_Port3|g" /etc/squid/squid.conf

 # Starting Proxy server
 echo -e "Restarting Squid Proxy server..."
 systemctl restart squid
}

function FogPanel(){

# nginx
apt-get -y install nginx php-fpm php-mcrypt php-cli libexpat1-dev libxml-parser-perl
rm /etc/nginx/sites-enabled/default
rm /etc/nginx/sites-available/default
wget -O /etc/php/7.0/fpm/pool.d/www.conf "https://raw.githubusercontent.com/ehomecore/deb-ubun/master/www.conf"
mkdir -p /home/vps/public_html
echo "<?php phpinfo(); ?>" > /home/vps/public_html/info.php
wget -O /home/vps/public_html/index.html https://raw.githubusercontent.com/GakodArmy/teli/main/index.html
wget -O /etc/nginx/conf.d/vps.conf "https://raw.githubusercontent.com/ehomecore/deb-ubun/master/vps.conf"
sed -i 's/listen = \/var\/run\/php7.0-fpm.sock/listen = 127.0.0.1:9000/g' /etc/php/7.0/fpm/pool.d/www.conf
service nginx restart
service php7.0-fpm restart

# Setting up our WebServer Ports and IP Addresses
cd
sleep 1

sed -i "s|/run/php/php7.0-fpm.sock|127.0.0.1:$Php_Socket|g" /etc/php/7.0/fpm/pool.d/www.conf
sed -i "s|Php_Socket|$Php_Socket|g" /etc/nginx/conf.d/vps.conf
sed -i "s|Nginx_Port|$Nginx_Port|g" /etc/nginx/conf.d/vps.conf
sed -i "s|Fog_Openvpn_Monitoring|$Fog_Openvpn_Monitoring|g" /etc/nginx/conf.d/monitoring.conf
sed -i "s|Fog_Openvpn_Monitoring|$Fog_Openvpn_Monitoring|g" /home/vps/public_html/index.php
sed -i "s|fogserverip|$IPADDR|g" /home/vps/public_html/index.php
sed -i "s|v2portas|65432|g" /home/vps/public_html/index.php

sed -i "s|SSH_Port1|$SSH_Port1|g" /home/vps/public_html/index.php
sed -i "s|SSH_Port2|$SSH_Port2|g" /home/vps/public_html/index.php
sed -i "s|Dropbear_Port1|$Dropbear_Port1|g" /home/vps/public_html/index.php
sed -i "s|Dropbear_Port2|$Dropbear_Port2|g" /home/vps/public_html/index.php
sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /home/vps/public_html/index.php
sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /home/vps/public_html/index.php
sed -i "s|Stunnel_Port3|$Stunnel_Port3|g" /home/vps/public_html/index.php
sed -i "s|Privoxy_Port1|$Privoxy_Port1|g" /home/vps/public_html/index.php
sed -i "s|Privoxy_Port2|$Privoxy_Port1|g" /home/vps/public_html/index.php
sed -i "s|Squid_Port1|$Squid_Port1|g" /home/vps/public_html/index.php
sed -i "s|Squid_Port2|$Squid_Port2|g" /home/vps/public_html/index.php
sed -i "s|Squid_Port3|$Squid_Port3|g" /home/vps/public_html/index.php
sed -i "s|OHP_Port1|$OHP_Port1|g" /home/vps/public_html/index.php
sed -i "s|OHP_Port2|$OHP_Port2|g" /home/vps/public_html/index.php
sed -i "s|OHP_Port3|$OHP_Port3|g" /home/vps/public_html/index.php
sed -i "s|OHP_Port4|$OHP_Port4|g" /home/vps/public_html/index.php
sed -i "s|OHP_Port5|$OHP_Port5|g" /home/vps/public_html/index.php
sed -i "s|Simple_Port1|$Simple_Port1|g" /home/vps/public_html/index.php
sed -i "s|Simple_Port2|$Simple_Port2|g" /home/vps/public_html/index.php
sed -i "s|Direct_Port1|$Direct_Port1|g" /home/vps/public_html/index.php
sed -i "s|Direct_Port2|$Direct_Port2|g" /home/vps/public_html/index.php
sed -i "s|Open_Port1|$Open_Port1|g" /home/vps/public_html/index.php
sed -i "s|Open_Port2|$Open_Port2|g" /home/vps/public_html/index.php
sed -i "s|NXPort|$Nginx_Port|g" /home/vps/public_html/index.php

service nginx restart


# Setting Up OpenVPN monitoring
wget -O /srv/openvpn-monitor.zip "https://github.com/korn-sudo/Project-Fog/raw/main/files/panel/openvpn-monitor.zip"
cd /srv
unzip -qq openvpn-monitor.zip
rm -f openvpn-monitor.zip
cd openvpn-monitor
virtualenv .
. bin/activate
pip install -r requirements.txt

#updating ports for openvpn monitoring
 sed -i "s|Tcp_Monitor_Port|$Tcp_Monitor_Port|g" /srv/openvpn-monitor/openvpn-monitor.conf
 sed -i "s|Udp_Monitor_Port|$Udp_Monitor_Port|g" /srv/openvpn-monitor/openvpn-monitor.conf


# Creating monitoring .ini for our OpenVPN Monitoring Panel
cat <<'myMonitorINI' > /etc/uwsgi/apps-available/openvpn-monitor.ini
[uwsgi]
base = /srv
project = openvpn-monitor
logto = /var/log/uwsgi/app/%(project).log
plugins = python
chdir = %(base)/%(project)
virtualenv = %(chdir)
module = openvpn-monitor:application
manage-script-name = true
mount=/openvpn-monitor=openvpn-monitor.py
myMonitorINI

ln -s /etc/uwsgi/apps-available/openvpn-monitor.ini /etc/uwsgi/apps-enabled/

# GeoIP For OpenVPN Monitor
mkdir -p /var/lib/GeoIP
wget -O /var/lib/GeoIP/GeoLite2-City.mmdb.gz "https://github.com/korn-sudo/Project-Fog/raw/main/files/panel/GeoLite2-City.mmdb.gz"
gzip -d /var/lib/GeoIP/GeoLite2-City.mmdb.gz

# Now creating all of our OpenVPN Configs 

# Smart Giga Games Promo TCP
cat <<Config1> /home/vps/public_html/Smart.Giga.Games.ovpn
# Created by blackestsaint

client
dev tun
proto tcp
setenv FRIENDLY_NAME "Server-Name"
remote $IPADDR $OpenVPN_TCP_Port
nobind
persist-key
persist-tun
comp-lzo
keepalive 10 120
tls-client
remote-cert-tls server
verb 2
auth-user-pass
cipher none
auth none
auth-nocache
auth-retry interact
connect-retry 0 1
nice -20
reneg-sec 0
redirect-gateway def1
setenv CLIENT_CERT 0

http-proxy $IPADDR $Squid_Port1
http-proxy-option VERSION 1.1
http-proxy-option CUSTOM-HEADER Host codm.garena.com
http-proxy-option CUSTOM-HEADER X-Forward-Host codm.garena.com
http-proxy-option CUSTOM-HEADER X-Forwarded-For codm.garena.com
http-proxy-option CUSTOM-HEADER Referrer codm.garena.com

<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
Config1

# TNT Mobile Legends 10 Promo
cat <<Config2> /home/vps/public_html/ohp.ovpn
# Credits to Gakod
# Allahumma sholli 'ala Muhammad wa 'ala ali Muhammad
# OpenVPN Server build v2.5.4
# Server Location: SG, Singapore
# Server ISP: DigitalOcean, LLC
#
# Experimental Config only
# Examples demonstrated below on how to Play with OHPServer
# Credits to kinGmapua

client
dev tun
proto tcp
setenv FRIENDLY_NAME "Server-Name"
remote devvault.digi.com.my $OpenVPN_TCP_Port
http-proxy $IPADDR $Privoxy_Port1
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
Config2

# Default TCP
cat <<Config3> /home/vps/public_html/Direct.TCP.ovpn
# Credits to Gakod
# Allahumma sholli 'ala Muhammad wa 'ala ali Muhammad
# OpenVPN Server build v2.5.4
# Server Location: SG, Singapore
# Server ISP: DigitalOcean, LLC
#
# Experimental Config only
# Examples demonstrated below on how to Play with OHPServer
# Credits to kinGmapua


client
dev tun
proto tcp
setenv FRIENDLY_NAME "Server-Name"
remote $IPADDR $OpenVPN_TCP_Port
http-proxy $IPADDR $Privoxy_Port1
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1

<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
Config3

# Default UDP
cat <<Config4> /home/vps/public_html/Direct.UDP.ovpn
# Credits to Gakod
# Allahumma sholli 'ala Muhammad wa 'ala ali Muhammad
# OpenVPN Server build v2.5.4
# Server Location: SG, Singapore
# Server ISP: DigitalOcean, LLC
#
# Experimental Config only
# Examples demonstrated below on how to Play with OHPServer
# Credits to kinGmapua

client
dev tun
proto udp
setenv FRIENDLY_NAME "Server-Name"
remote $IPADDR $OpenVPN_UDP_Port
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
verify-x509-name server_ADBtkp0yL46HLXPb name
auth SHA256
auth-nocache
cipher AES-128-CBC
tls-client
tls-version-min 1.2
tls-cipher TLS-DHE-RSA-WITH-AES-128-GCM-SHA256
setenv opt block-outside-dns
verb 3
auth-user-pass
key-direction 1
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
Config4

# Smart Giga Stories Promo TCP
cat <<Config5> /home/vps/public_html/ssl.ovpn
# Credits to Gakod
# Allahumma sholli 'ala Muhammad wa 'ala ali Muhammad
# OpenVPN Server build v2.5.4
# Server Location: SG, Singapore
# Server ISP: DigitalOcean, LLC
#
# Experimental Config only
# Examples demonstrated below on how to Play with OHPServer
# Credits to kinGmapua

client
dev tun
proto tcp
setenv FRIENDLY_NAME "Server-Name" 
remote 127.0.0.1 $OpenVPN_TCP_Port
route $IPADDR 255.255.255.255 net_gateway 
http-proxy $IPADDR 8080
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
Config5

# Renaming Server Name
 sed -i "s|Server-Name|$ServerName|g" /home/vps/public_html/Smart.Giga.Stories.ovpn
 sed -i "s|Server-Name|$ServerName|g" /home/vps/public_html/Direct.UDP.ovpn
 sed -i "s|Server-Name|$ServerName|g" /home/vps/public_html/Direct.TCP.ovpn
 sed -i "s|Server-Name|$ServerName|g" /home/vps/public_html/ML10.ovpn
 sed -i "s|Server-Name|$ServerName|g" /home/vps/public_html/Smart.Giga.Games.ovpn

 # Creating OVPN download site index.html
cat <<'mySiteOvpn' > /home/vps/public_html/projectfog.html
<!DOCTYPE html>
<html lang="en">

<!-- Openvpn Config File Download site by Gwapong Lander -->

<head><meta charset="utf-8" /><title>VPN Config File Download</title><meta name="description" content="Project Fog Server -korn" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Project Fog Config List</h5><br /><ul 

class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Giga Games Promo <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For Smart, TnT and Sun </small></p><a class="btn btn-outline-success waves-effect btn-sm" 
href="http://IP-ADDRESS:NGINXPORT/Smart.Giga.Games.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li 

class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Giga Stories Promo <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For Smart, TnT and Sun </small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/Smart.Giga.Stories.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li 

class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Mobile Legends Promo (ML10) <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For any network with Mobile Legends Promo </small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/ML10.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li 


class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Openvpn Default TCP <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> This default and cannot be use for bypassing promos.</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/Direct.TCP.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li 


class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Openvpn Default UDP <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> This default and cannot be use for bypassing promos.</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/Direct.UDP.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li 

class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p> Reserved <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> Reserve by Gwapong Lander.</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/null" style="float:right;"><i class="fa fa-download"></i> Download</a></li>

</ul></div></div></div></div></body></html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
 sed -i "s|NGINXPORT|$Nginx_Port|g" /home/vps/public_html/projectfog.html
 sed -i "s|IP-ADDRESS|$IPADDR|g" /home/vps/public_html/projectfog.html

 # Restarting nginx service
 systemctl restart nginx
 
 # Creating all .ovpn config archives
 cd /home/vps/public_html
 zip -qq -r config.zip *.ovpn
 cd

chown -R www-data:www-data /home/vps/public_html

}

function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)"



function ConfStartup(){

# Creating startup 1 script using cat eof tricks
cat <<'kornz' > /etc/projectfogstartup
#!/bin/sh

# Deleting Expired SSH Accounts
/usr/local/sbin/korn-user-delete-expired &> /dev/null

# Firewall Protection ( Torrent, Brute Force, Port Scanning )
/usr/local/sbin/korn-turntable-fog-obs

# Setting server local time
ln -fs /usr/share/zoneinfo/Asia/Manila /etc/localtime

# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive

# Blacklisted
#/bin/bash /etc/vil/blacklist

# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $(wget -4qO- http://ipinfo.io/ip) -p tcp -m multiport --dport 1:65535 -j ACCEPT

# Allowing OpenVPN to Forward traffic
/bin/bash /etc/openvpn/openvpn.bash

# SSR Server
/usr/local/sbin/korn-ssr-updater-fog-obs


######                 WARNING                           
###### MAKE SURE YOU ONLY PUT [FULLY WORKING APPS] 
######          WHOLE SCRIPT WILL COLLAPSE         
######         IF YOU ADD NOT WORKING SCRIPT       
######    TEST IT BEFORE ADD YOUR COMMAND HERE     
######              by: blackestsaint      

kornz

rm -rf /etc/sysctl.d/99*


 # Setting our startup script to run every machine boots 
cat <<'kornx' > /etc/systemd/system/projectfogstartup.service
[Unit] 
Description=/etc/projectfogstartup
ConditionPathExists=/etc/projectfogstartup

[Service] 
Type=forking 
ExecStart=/etc/projectfogstartup start 
TimeoutSec=0
StandardOutput=tty 
RemainAfterExit=yes 
SysVStartPriority=99 

[Install] 
WantedBy=multi-user.target
kornx

chmod +x /etc/projectfogstartup
systemctl enable projectfogstartup
systemctl start projectfogstartup

# Applying cron job 
cd
echo "SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin" | crontab -
sleep 1

echo "#OHP Server
@reboot /usr/local/sbin/korn-ohp-updater-fog-obs

#Multi-login Limit ON dropbear,ssh,ssl (not included: openvpn)
@reboot /usr/local/sbin/limiter-fog-obs
@reboot /usr/local/sbin/fog-limiter-activator-obs

# Python Socks Server
@reboot /usr/local/sbin/korn-python-updater-fog-obs

# Timer for Auto-reconnect
@reboot /usr/local/sbin/disable-orasan


" >> /var/spool/cron/crontabs/root

}

###### Chokepoint for Debian and Ubuntu No.2  vvvvvv

function ConfMenu(){
echo -e " Creating Menu scripts.."

cd /usr/local/sbin/
wget -q 'https://github.com/korn-sudo/Project-Fog/raw/main/files/menu/korn2021-ubuntu.zip'
unzip -qq korn2021-ubuntu.zip
rm -f korn2021-ubuntu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd ~

wget -O /usr/bin/uninstaller-fog-obs "https://github.com/korn-sudo/Project-Fog/raw/main/files/plugins/ubuntu_unins-fog-obs"
chmod +x /usr/bin/uninstaller-fog-obs

}
function ScriptMessage(){
clear
echo ""
echo ""
echo ""
echo -e "                            â–‘â–’â–“â–ˆ â˜ï¸ Project Fog â˜ï¸ â–ˆâ–“â–’â–‘" 
echo " "
echo -e "                     This Script is FREE always and forever . . ."
echo -e "                               by: blackestsaint ðŸ¦Š  "
echo ""
echo ""
echo -e "                                    Credits to:"
echo -e "                                    PHC-Ford [FordSenpai] ðŸ±"
echo -e "                                    Bon-chan ðŸ¦¢"
echo -e "                                    lfasmpao ðŸ¯"
echo -e "                                    ADM-Manager ðŸ¬"
echo -e "                                    Sprov ðŸŒ¤ï¸"
echo -e "                                    WaGo-G ðŸ”¥"
echo -e "                                    PHC_JAYVEE â˜£ï¸"
echo ""
echo ""
}

function InstBadVPN(){
 # Pull BadVPN Binary 64bit or 32bit
if [ "$(getconf LONG_BIT)" == "64" ]; then
 wget -O /usr/bin/badvpn-udpgw "https://github.com/korn-sudo/Project-Fog/raw/main/files/plugins/badvpn-udpgw64"
else
 wget -O /usr/bin/badvpn-udpgw "https://github.com/korn-sudo/Project-Fog/raw/main/files/plugins/badvpn-udpgw"
fi
 # Set BadVPN to Start on Boot via .profile
 sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300' /root/.profile
 # Change Permission to make it Executable
 chmod +x /usr/bin/badvpn-udpgw
 # Start BadVPN via Screen
 screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300
}

function CheckRequirements(){

###### Chokepoint for Debian and Ubuntu No.3   vvvvvv

 # Non-rooted machine will be force exit
 # If you're on sudo user, run `sudo su -` first before running this script
 if [[ $EUID -ne 0 ]];then
 ScriptMessage
 echo -e "[\e[1;31mError\e[0m] This script must be run as root, exiting..."
 exit 1
fi

 # (For OpenVPN) Checking it this machine have TUN Module, this is the tunneling interface of OpenVPN server
 if [[ ! -e /dev/net/tun ]]; then
 echo -e "[\e[1;31mError\e[0m] You cant use this script without TUN Module installed/embedded in your machine, file a support ticket to your machine admin about this matter"
 echo -e "[\e[1;31m-\e[0m] Script is now exiting..."
 exit 1
fi
###### Chokepoint for Debian and Ubuntu No.3  ^^^^^
}

function InstOthers(){

  # Running screenfetch
 wget -O /usr/bin/screenfetch "https://raw.githubusercontent.com/korn-sudo/Project-Fog/main/files/plugins/screenfetch"
 chmod +x /usr/bin/screenfetch
 echo "/bin/bash /etc/openvpn/openvpn.bash" >> .profile
 echo "clear" >> .profile
 echo "screenfetch" >> .profile

# Obash
cd
curl -skL "https://github.com/louigi600/obash/archive/8976fd2fa256c583769b979036f59a741730eb48.tar.gz" -o obash.tgz
tar xf obash.tgz && rm -f obash.tgz
sleep 1
cd obash-8976fd2fa256c583769b979036f59a741730eb48
make clean
make
mv -f obash /usr/local/bin/obash
cd .. && rm -rf obash-8976fd2fa256c583769b979036f59a741730eb48
cd

#alias menu
wget -O ./.bashrc "https://raw.githubusercontent.com/korn-sudo/Project-Fog/main/files/plugins/.bashrc"

#banner

 # Setting server local time
 ln -fs /usr/share/zoneinfo/$MyVPS_Time /etc/localtime

#version of Project Fog autoscript
echo "$ver" > /etc/korn/version

# Start-up Application Verification (protection for modders)
mkdir -p /usr/lib/kshell
echo "75" > /usr/lib/kshell/libs

}

function Installation-log(){

clear
echo ""
echo " INSTALLATION FINISH! "
echo ""
echo ""
echo "Server Information: " | tee -a log-install.txt | lolcat
echo "   â€¢ Timezone       : $MyVPS_Time " tee -a log-install.txt | lolcat
echo "   â€¢ Fail2Ban       : [ON]"  | tee -a log-install.txt | lolcat
echo "   â€¢ IPtables       : [ON]"  | tee -a log-install.txt | lolcat
echo "   â€¢ Auto-Reboot    : [OFF] See menu to [ON] "  | tee -a log-install.txt
echo "   â€¢ TCP Speed Tweak: [OFF] See menu to [ON]" | tee -a log-install.txt | lolcat
echo "   â€¢ Squid Cache    : [ON]" | tee -a log-install.txt | lolcat
echo "   â€¢ IPv6           : [OFF]"  | tee -a log-install.txt  | lolcat

echo " "| tee -a log-install.txt | lolcat
echo "Automated Features:"| tee -a log-install.txt | lolcat
echo "   â€¢ Auto delete expired user account"| tee -a log-install.txt | lolcat
echo "   â€¢ Auto restart server "| tee -a log-install.txt | lolcat
echo "   â€¢ Auto disconnect multilogin users [Openvpn not included]."| tee -a log-install.txt | lolcat
echo "   â€¢ Auto configure firewall every reboot[Protection for torrent and etc..]"| tee -a log-install.txt | lolcat
echo "   â€¢ Auto updated firewall[if port change,removed or add,firewall will adapt your new port]"| tee -a log-install.txt | lolcat
echo "   â€¢ Auto updated OHP[Over-HTTP-Puncher]working even theres changes in ports"| tee -a log-install.txt | lolcat

echo " " | tee -a log-install.txt | lolcat
echo "Services & Port Information:" | tee -a log-install.txt | lolcat
echo "   â€¢ OpenVPN              : [ON] : TCP: $OpenVPN_TCP_Port | UDP: $OpenVPN_UDP_Port" | tee -a log-install.txt | lolcat
echo "   â€¢ Dropbear             : [ON] : $Dropbear_Port1 | $Dropbear_Port2 " | tee -a log-install.txt | lolcat
echo "   â€¢ Squid Proxy          : [ON] : $Squid_Port1 | $Squid_Port2 |$Squid_Port3 | limit to IP Server" | tee -a log-install.txt | lolcat
echo "   â€¢ Privoxy              : [ON] : $Privoxy_Port1 | $Privoxy_Port2 | limit to IP Server" | tee -a log-install.txt | lolcat
echo "   â€¢ SSL through Dropbear : [ON] : $Stunnel_Port1  " | tee -a log-install.txt | lolcat
echo "   â€¢ SSL through OpenSSH  : [ON] : $Stunnel_Port2" | tee -a log-install.txt | lolcat
echo "   â€¢ SSL through Openvpn  : [ON] : $Stunnel_Port3 " | tee -a log-install.txt | lolcat
echo "   â€¢ OHP [through Squid]  : [ON] : $OHP_Port1 | $OHP_Port2 " | tee -a log-install.txt | lolcat
echo "   â€¢ OHP [through Privoxy]: [ON] : $OHP_Port3 | $OHP_Port4 " | tee -a log-install.txt | lolcat
echo "   â€¢ OHP [through Openvpn]: [ON] : $OHP_Port5 " | tee -a log-install.txt | lolcat
echo "   â€¢ Simple Socks Proxy   : [ON] : $Simple_Port1 | $Simple_Port2 " | tee -a log-install.txt | lolcat
echo "   â€¢ Direct Socks Proxy   : [ON] : $Direct_Port1 | $Direct_Port2 " | tee -a log-install.txt | lolcat
echo "   â€¢ Openvpn Socks Proxy  : [ON] : $Open_Port1   | $Open_Port2 " | tee -a log-install.txt | lolcat
echo "   â€¢ ShadowsocksR Server  : [OFF] : Configure through menu " | tee -a log-install.txt | lolcat
echo "   â€¢ BADVPN               : [ON] : 7300 " | tee -a log-install.txt | lolcat
echo "   â€¢ Additional SSHD Port : [ON] :  $SSH_Port2" | tee -a log-install.txt | lolcat
echo "   â€¢ OCS Panel 		: [ON] : http://$IPADDR:$Nginx_Port" | tee -a log-install.txt | lolcat
echo "   â€¢ Openvpn Monitoring   : [ON] : http://$IPADDR:$Fog_Openvpn_Monitoring" | tee -a log-install.txt | lolcat
echo "   â€¢ V2ray Panel          : [ON] : http://$IPADDR:65432 " | tee -a log-install.txt | lolcat

echo "" | tee -a log-install.txt | lolcat
echo "Notes:" | tee -a log-install.txt | lolcat
echo "  â˜… Edit/Change/Off/On your OHP Port and Python Socks [see in menu option] " | tee -a log-install.txt | lolcat
echo "  â˜… Torrent Protection [ add newest torrent port] " | tee -a log-install.txt | lolcat
echo "  â˜… Port Scanner Basic Protection  " | tee -a log-install.txt | lolcat
echo "  â˜… Brute Force Attack Basic Protection  " | tee -a log-install.txt | lolcat
echo "  â˜… All ports can be edited in Edit Menu. OHP and Socks Proxy adapt new port. " | tee -a log-install.txt | lolcat
echo "  â˜… Multi-login Limit customize per user [see menu]. " | tee -a log-install.txt | lolcat
echo "  â˜… To display list of commands: " [ menu ] or [ menu fog ] "" | tee -a log-install.txt | lolcat
echo "" | tee -a log-install.txt | lolcat
echo "  â˜… Other concern and questions of these auto-scripts?" | tee -a log-install.txt | lolcat
echo "    Direct Messege : www.facebook.com/kornips" | tee -a log-install.txt | lolcat
echo ""
read -p " Press enter.."
}


function Complete-reboot(){
clear
echo ""
echo ""
figlet Project Fog -c | lolcat
echo ""
echo "       Installation Complete! System need to reboot to apply all changes! "
read -p "                      Press Enter to reboot..."
reboot
}


#########################################################
###             Installation Begins...
#########################################################

# Filtering Machine did not meet Requirements
echo "Checking if your Server meet the requirements . . . "
CheckRequirements

ScriptMessage
sleep 2

#System Upgrade and Updates
echo " Installing Operating System Updates"
InstUpdates

# Configure OpenSSH and Dropbear
echo " Configuring ssh..."
InstSSH

# Configure Stunnel
echo " Configuring stunnel..."
InsStunnel

# Configure BadVPN UDPGW
echo " Configuring BadVPN UDPGW..."
InstBadVPN

# Configure Squid and Privoxy
echo " Configuring proxy..."
InsProxy

# Configure Over-HTTP-Puncher
echo " Configuring Over-HTTP-Puncher..."
InsOHP

# Configure OpenVPN
echo " Configuring OpenVPN..."
InsOpenVPN

# Configuring Nginx OVPN config download site
echo " Configuring OpenVPN Config File and Panel Services..."
FogPanel

# Some assistance and startup scripts
echo " Configuring Startup Application Automation..."
ConfStartup

# VPS Menu script v1.0
echo " Configuring Main Dish Menu..."
ConfMenu


# Others Services ( Screenfetch, Setting Local, TCP Tweak )
echo " Adding other services..."
InstOthers

#Server Information and Details
echo "READ ME!"
Installation-log

#Final Touch (Reboot Remark)
Complete-reboot

 clear
 cd ~
 
rm /root/fog-debian -rf

exit 1
